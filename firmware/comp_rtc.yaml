# SAMBA v2 FIRMWARE
# configure RTC device on SAMBA
# written by Thomas Parkinson, May 2024


# Define RTC device
# https://esphome.io/components/time/ds1307.html
time:
  - platform: ds1307
    id: ds1307_time
    address: 0x68
    update_interval: never

# Define loop for sensor measurements
# https://esphome.io/guides/automations.html#component-update-action
    on_time:
      - seconds: 0
        minutes: /1
        then:
          - component.update: sys_uptime
          - if:
              condition: 
                lambda: |-
                  return id(sys_uptime).state > 120;
              then:
                - light.turn_on:
                    id: led_esp
                - component.update: sys_time
                - component.update: sensor_temperature
                - component.update: sensor_humidity
                - component.update: sensor_globe
                - component.update: sensor_as1
                - component.update: sensor_as2
                - delay: 200ms
                - text_sensor.template.publish: 
                    id: sys_time
                    state: !lambda 'return id(sys_time).state;'
                - sensor.template.publish: 
                    id: sensor_temperature
                    state: !lambda 'return id(sensor_temperature).state;'
                - sensor.template.publish: 
                    id: sensor_humidity
                    state: !lambda 'return id(sensor_humidity).state;'
                - sensor.template.publish: 
                    id: sensor_globe
                    state: !lambda 'return id(sensor_globe).state;'
                - sensor.template.publish: 
                    id: sensor_as1
                    state: !lambda 'return id(sensor_as1).state;'
                - sensor.template.publish: 
                    id: sensor_as2
                    state: !lambda 'return id(sensor_as2).state;'
                - logger.log:
                    level: INFO
                    format: "Sample taken at %s"
                    args: ['id(sys_time).state.c_str()']
                - light.turn_off:
                    id: led_esp
              else:
                - logger.log: 
                    level: INFO
                    format: "Warming up device"

# also use SNTP server for time
  - platform: sntp
    id: sntp_time
    timezone: "Australia/Sydney"
    servers:
     - 0.pool.ntp.org
     - 1.pool.ntp.org
     - 2.pool.ntp.org
    on_time_sync:
      then:
        - ds1307.write_time:
            id: ds1307_time
        - logger.log:
            level: INFO
            format: "RTC synchronised with SNTP"

# Define timestamp sensor
# https://esphome.io/components/text_sensor/index.html
text_sensor:
  - platform: template
    id: sys_time
    name: "System Time"
    internal: true
    lambda: |-
      auto time_str = id(ds1307_time).now().strftime("%Y-%m-%d %H:%M:%S");
      return { time_str };
