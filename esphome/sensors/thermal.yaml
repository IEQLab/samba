# SAMBA v2 FIRMWARE
# configure thermal sensors on SAMBA
# written by Thomas Parkinson, May 2024


# Define SHT device
# https://esphome.io/components/sensor/sht4x.html
sensor:
  - platform: sht4x
    address: 0x44
    update_interval: 30s
    temperature:
      id: sht_temperature
      internal: true
      filters:
        - clamp:
            min_value: -10
            max_value: 60
            ignore_out_of_range: true
        - median:
            window_size: 10
            send_every: 1
            send_first_at: 1

    humidity:
      id: sht_humidity
      internal: true
      filters:
        - clamp:
            min_value: 0
            max_value: 100
            ignore_out_of_range: true
        - median:
            window_size: 10
            send_every: 1
            send_first_at: 1

# temperature and humidity sensors
# https://esphome.io/components/sensor/template.html
  - platform: template
    id: samba_temperature
    name: "Air Temperature"
    update_interval: never
    accuracy_decimals: 2
    device_class: temperature
    icon: "mdi:thermometer"
    lambda: |-
      return id(sht_temperature).state;

  - platform: template
    id: samba_humidity
    name: "Relative Humidity"
    update_interval: never
    accuracy_decimals: 1
    device_class: humidity
    icon: "mdi:water-percent"
    lambda: |-
      return id(sht_humidity).state;


# Define NTC Thermistor
# https://esphome.io/components/sensor/ntc.html
  - platform: resistance
    id: ntc_resistance
    sensor: ads_ntc
    internal: true
    configuration: DOWNSTREAM
    resistor: 5.6kOhm

# https://www.murata.com/en-us/products/productdetail?partno=NXRT15XH103FA1B040
  - platform: ntc
    id: ntc_temp
    sensor: ntc_resistance
    internal: true
    calibration:
      b_constant: 3380
      reference_temperature: 25Â°C
      reference_resistance: 10kOhm
    filters:
      - clamp:
          min_value: -10
          max_value: 60
          ignore_out_of_range: true
      - median:
          window_size: 10
          send_every: 1
          send_first_at: 1

# globe temperature sensor
  - platform: template
    id: samba_globe
    name: "Globe Temperature"
    update_interval: never
    accuracy_decimals: 2
    device_class: temperature
    icon: "mdi:thermometer"
    lambda: |-
      return id(ntc_temp).state;


# Define anemometers
# https://moderndevice.com/products/wind-sensor
  - platform: copy
    id: as_1
    source_id: ads_as1
    internal: true
    filters:
      - calibrate_linear:
          method: least_squares
          datapoints:
            - 0.0 -> 0.0
            - 1.0 -> 1.0
            - 2.0 -> 2.0
      - clamp:
          min_value: 0
          max_value: 5
          ignore_out_of_range: true
      - median:
          window_size: 300
          send_every: 30
          send_first_at: 30

  - platform: copy
    id: as_2
    source_id: ads_as2
    internal: true
    filters:
      - calibrate_linear:
          method: least_squares
          datapoints:
            - 0.0 -> 0.0
            - 1.0 -> 1.0
            - 2.0 -> 2.0
      - clamp:
          min_value: 0
          max_value: 5
          ignore_out_of_range: true
      - median:
          window_size: 300
          send_every: 30
          send_first_at: 30

# air speed sensors
  - platform: template
    id: samba_airspeed
    name: "Air Speed"
    update_interval: never
    accuracy_decimals: 3
    device_class: speed
    icon: "mdi:weather-windy"
    lambda: |-
      return std::min({id(as_1).state, id(as_2).state});
