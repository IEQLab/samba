# SAMBA v2 FIRMWARE
# configure SAMBA to use Home Assistant API
# https://esphome.io/components/api.html
# written by Thomas Parkinson, May 2024


# Enable Home Assistant API
api:
  reboot_timeout: 0s

# Add restart button to Home Assistant
# https://esphome.io/components/button/restart
button:
  - platform: restart
    name: "Restart SAMBA"
    icon: mdi:restart
    entity_category: "config"

# Add shutdown button to Home Assistant
# https://esphome.io/components/button/shutdown
  - platform: shutdown
    name: "Shutdown SAMBA"
    icon: mdi:power
    entity_category: "config"

# Add safe mode button to Home Assistant
# https://esphome.io/components/safe_mode.html
  - platform: safe_mode
    name: "Restart SAMBA (Safe Mode)"
    icon: mdi:backup-restore
    entity_category: "config"

# Add factory reset switch to Home Assistant
# https://esphome.io/components/switch/factory_reset.html
switch:
  - platform: factory_reset
    name: "Factory Restore SAMBA"
    icon: mdi:alert
    entity_category: "config"

# Toggle HA uploads
  - platform: template
    name: "Home Assistant Upload"
    icon: mdi:home-analytics
    entity_category: "config"
    restore_mode: DISABLED
    lambda: |-
      return id(ha_enable);
    turn_on_action:
      - lambda: 'id(ha_enable) = true;'
    turn_off_action:
      - lambda: 'id(ha_enable) = false;'

# Toggle Influx uploads
  - platform: template
    name: "InfluxDB Upload"
    icon: mdi:cloud-upload-outline
    entity_category: "config"
    restore_mode: DISABLED
    lambda: |-
      return id(influx_enable);
    turn_on_action:
      - lambda: 'id(influx_enable) = true;'
    turn_off_action:
      - lambda: 'id(influx_enable) = false;'

# Define script to send measurements to Home Assistant
# https://esphome.io/components/script.html
script:
  - id: ha_publish_now
    mode: single
    then:
      - text_sensor.template.publish: 
          id: samba_timestamp
          state: !lambda 'return id(samba_timestamp).state;'
      - sensor.template.publish: 
          id: samba_temperature
          state: !lambda 'return id(samba_temperature).state;'
      - sensor.template.publish: 
          id: samba_humidity
          state: !lambda 'return id(samba_humidity).state;'
      - sensor.template.publish: 
          id: samba_globe
          state: !lambda 'return id(samba_globe).state;'
      - sensor.template.publish: 
          id: samba_airspeed
          state: !lambda 'return id(samba_airspeed).state;'
      - sensor.template.publish: 
          id: samba_mrt
          state: !lambda 'return id(samba_mrt).state;'
      - sensor.template.publish: 
          id: samba_co2
          state: !lambda 'return id(samba_co2).state;'
      - sensor.template.publish: 
          id: samba_pm25
          state: !lambda 'return id(samba_pm25).state;'
      - sensor.template.publish: 
          id: samba_voc
          state: !lambda 'return id(samba_voc).state;'
      - sensor.template.publish: 
          id: samba_nox
          state: !lambda 'return id(samba_nox).state;'
      - sensor.template.publish: 
          id: samba_lux
          state: !lambda 'return id(samba_lux).state;'
      - sensor.template.publish: 
          id: samba_spl
          state: !lambda 'return id(samba_spl).state;'
