# SAMBA v2 FIRMWARE
# configure upload of data to remote InfluxDB server
# custom component
# written by Thomas Parkinson, May 2024


# Define InfluxDB connection
influxdb_writer:
  id: influx_writer
  use_ssl: true
  host: "${influx_host}"
  port: "${influx_port}"
  token: "${influx_token}"
  org: "${influx_org}"
  bucket: "${influx_bucket}"
  timestamp_unit: "s"
  http_request_id: http_client
  time_id: sntp_time
  send_mac: true

  # Define Influx measurements for sensors
  sensor_names:
    samba_temperature: "Air Temperature"
    samba_humidity: "Relative Humidity"
    samba_globe: "Globe Temperature"
    samba_airspeed: "Air Speed"
    samba_co2: "Carbon Dioxide"
    samba_pm25: "PM2.5"
    samba_voc: "TVOC"
    samba_nox: "NOx Index"
    samba_lux: "Illuminance"
    samba_spl: "Sound Pressure Level"

  # Define Influx field keys
  field_names:
    samba_temperature: "degrees"
    samba_humidity: "percent"
    samba_globe: "degrees"
    samba_airspeed: "m/s"
    samba_co2: "ppm"
    samba_pm25: "ug/m3"
    samba_voc: "ppb"
    samba_nox: "index"
    samba_lux: "lux"
    samba_spl: "dba"

#   Define Influx tags for fields
#   Note: these are overwritten at boot by below script
#   sensor_tags:
#     samba_temperature:
#       building: "INSERT"
#       zone: "INSERT"

# Define script to set tags on boot using global variables
# https://esphome.io/components/script.html
script:
  - id: set_influx_tags
    mode: queued
    then:
      - lambda: |-
          id(influx_writer).set_dynamic_tag("samba_temperature", "building", id(building_tag));
          id(influx_writer).set_dynamic_tag("samba_temperature", "zone", id(zone_tag));

          id(influx_writer).set_dynamic_tag("samba_humidity", "building", id(building_tag));
          id(influx_writer).set_dynamic_tag("samba_humidity", "zone", id(zone_tag));

          id(influx_writer).set_dynamic_tag("samba_globe", "building", id(building_tag));
          id(influx_writer).set_dynamic_tag("samba_globe", "zone", id(zone_tag));

          id(influx_writer).set_dynamic_tag("samba_airspeed", "building", id(building_tag));
          id(influx_writer).set_dynamic_tag("samba_airspeed", "zone", id(zone_tag));

          id(influx_writer).set_dynamic_tag("samba_co2", "building", id(building_tag));
          id(influx_writer).set_dynamic_tag("samba_co2", "zone", id(zone_tag));

          id(influx_writer).set_dynamic_tag("samba_pm25", "building", id(building_tag));
          id(influx_writer).set_dynamic_tag("samba_pm25", "zone", id(zone_tag));

          id(influx_writer).set_dynamic_tag("samba_voc", "building", id(building_tag));
          id(influx_writer).set_dynamic_tag("samba_voc", "zone", id(zone_tag));

          id(influx_writer).set_dynamic_tag("samba_nox", "building", id(building_tag));
          id(influx_writer).set_dynamic_tag("samba_nox", "zone", id(zone_tag));

          id(influx_writer).set_dynamic_tag("samba_lux", "building", id(building_tag));
          id(influx_writer).set_dynamic_tag("samba_lux", "zone", id(zone_tag));

          id(influx_writer).set_dynamic_tag("samba_spl", "building", id(building_tag));
          id(influx_writer).set_dynamic_tag("samba_spl", "zone", id(zone_tag));
